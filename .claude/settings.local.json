{
  "permissions": {
    "allow": [
      "Bash(pnpm build:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(pnpm dev:*)",
      "Bash(npx tsc:*)",
      "Bash(pnpm lint:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "Bash(pnpm add:*)",
      "Bash(pnpm install:*)",
      "Bash(cat:*)",
      "Bash(npm run build:*)",
      "Bash(git rm:*)",
      "Bash(timeout 30 npm run build)",
      "Read(C:\\Users\\asaf6\\.claude/**)",
      "Read(C:\\Users\\asaf6/**)",
      "Bash(npx next lint:*)",
      "Bash(npx next build:*)",
      "WebFetch(domain:localhost)",
      "Bash(curl:*)",
      "Bash(node:*)",
      "Bash(npm run dev:*)",
      "Read(C:\\Users\\asaf6\\Desktop\\APP/**)",
      "Read(C:\\Users\\asaf6\\Desktop\\APP\\scripts/**)",
      "Read(C:\\Users\\asaf6\\Desktop\\APP\\scripts/**)",
      "Read(C:\\Users\\asaf6\\Desktop\\APP\\scripts/**)",
      "Bash(npm install:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(echo:*)",
      "Bash(npx supabase:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm ls:*)",
      "Bash(npx eslint:*)",
      "Bash(npm run lint:*)",
      "Bash(npm cache clean:*)",
      "Bash(npm run generate-types:safe:*)",
      "Read(C:\\Users\\asaf6/**)",
      "Read(C:\\Users\\asaf6\\AppData\\Roaming\\Claude/**)",
      "WebFetch(domain:supabase.com)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)",
      "Read(C:\\Users\\asaf6/**)",
      "Bash(git clone:*)",
      "Read(C:\\Users\\asaf6\\Desktop\\supabase-mcp-server/**)",
      "WebFetch(domain:vhtbinssqbzcjmbgkseo.supabase.co)",
      "Bash(where node)",
      "Read(C:\\Users\\asaf6/**)",
      "Bash(npx playwright:*)",
      "Read(C:\\Users\\asaf6/**)",
      "Read(C:\\Users\\asaf6/**)",
      "WebFetch(domain:mcp.vercel.com)",
      "Bash(set CLAUDE_CODE_MAX_OUTPUT_TOKENS=8192)",
      "Bash(set CLAUDE_CODE_MAX_OUTPUT_TOKENS=81922)",
      "mcp__sequential__sequentialthinking",
      "Bash(claude agents create python-debug-expert)",
      "Bash(git reset:*)",
      "Bash(npm ls:*)",
      "Read(//c/Users/asaf6/Desktop/APP/**)",
      "Read(//c/Users/asaf6/.claude/**)",
      "Bash(git checkout:*)",
      "mcp__supabase__get_project_url",
      "mcp__playwright__browser_navigate",
      "mcp__supabase__search_docs",
      "mcp__supabase__execute_sql",
      "Bash(nslookup:*)",
      "mcp__supabase__list_branches",
      "Bash(pkill:*)",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_click",
      "Bash(ipconfig /flushdns)",
      "mcp__supabase__get_anon_key",
      "mcp__supabase__generate_typescript_types",
      "Bash(timeout 30 curl -I https://smartpin-tpo.vercel.app)",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__read_text_file",
      "mcp__supabase__list_tables",
      "mcp__supabase__apply_migration",
      "mcp__supabase__get_advisors",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__create_directory",
      "mcp__filesystem__move_file",
      "mcp__filesystem__write_file",
      "Bash(git restore:*)",
      "Bash(find:*)",
      "Read(//c/Users/asaf6/**)",
      "Bash(npx -y @supabase/mcp-server-supabase:*)"
    ],
    "deny": [],
    "ask": []
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); project_dir=$(echo \"$input\" | jq -r '.workspace.project_dir'); model=$(echo \"$input\" | jq -r '.model.display_name'); if [ \"$project_dir\" != \"null\" ] && [ -d \"$project_dir\" ]; then project_name=$(basename \"$project_dir\"); printf \"\\033[2m%s\\033[0m in \\033[1;34m%s\\033[0m • %s\" \"$model\" \"$project_name\" \"SmartPin TPO Navigation Analysis\"; else printf \"\\033[2m%s\\033[0m • %s\" \"$model\" \"SmartPin TPO Navigation Analysis\"; fi"
  }
}